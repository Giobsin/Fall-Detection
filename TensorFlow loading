import numpy as np
import pandas as pd
import tensorflow as tf

# Load the TensorFlow Lite model
interpreter = tf.lite.Interpreter(model_path="features_model.tflite")
interpreter.allocate_tensors()

# Get input and output tensors
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# Define folder path and CSV file
folder_path = 'infinityai_fitness_basic_fly_v1.0/data'
csv_file = 'fly00.csv'

# Load the CSV file
file_path = os.path.join(folder_path, csv_file)
data = pd.read_csv(file_path)

# Create new features
data['New_Feature_1'] = data['Left Knee X'] + data['Left Ankle Y']
data['New_Feature_2'] = data['Right Elbow X'] + data['Left Shoulder Y']
data['New_Feature_3'] = data['Right Shoulder Y'] - data['Left Hip Y']
data['New_Feature_4'] = abs(data['Left Ankle X'] - data['Right Hip Y'])
data['New_Feature_5'] = (data['Right Wrist Y'] - data['Left Knee X']) ** 2
data['New_Feature_6'] = np.sqrt((data['Left Elbow X'] - data['Nose Y'])**2 + (data['Nose X'] - data['Right Wrist X'])**2)
data['New_Feature_7'] = np.arctan2(data['Right Ankle Y'] - data['Right Shoulder Y'], data['Left Elbow X'] - data['Left Shoulder X'])
data['New_Feature_8'] = data['Left Ear Y'] * data['Right Ankle X']
data['New_Feature_9'] = np.exp(data['Right Knee Y'] - data['Left Shoulder X'])
data['New_Feature_10'] = np.log(abs(data['Right Elbow Y'] - data['Left Hip X']) + 1)
data['New_Feature_11'] = data['Left Ankle X'] ** (1/3) + data['Right Ankle X'] ** (1/3)
data['New_Feature_12'] = np.sin(data['Right Hip X']) + np.cos(data['Left Elbow Y'])
data['New_Feature_13'] = (data['Right Wrist Y'] - data['Left Ankle X']) / (data['Left Ankle Y'] - data['Right Wrist X'] + 1e-8)
data['New_Feature_14'] = np.log(abs(data['Right Hip X'] - data['Left Shoulder Y']) + 1)
   
# Additional creative features with different body parts
data['New_Feature_15'] = data['Left Shoulder Y'] ** 2 - data['Right Ankle X']
data['New_Feature_16'] = np.sqrt((data['Right Ear Y'] - data['Left Wrist Y'])**2 + (data['Right Ear X'] - data['Left Wrist X'])**2)
data['New_Feature_17'] = np.arctan2(data['Left Hip X'] - data['Right Elbow Y'], data['Right Shoulder Y'] - data['Left Knee X'])
data['New_Feature_18'] = data['Right Knee X'] * data['Left Ankle Y']
data['New_Feature_19'] = np.exp(data['Right Elbow X'] - data['Left Knee Y'])
data['New_Feature_20'] = np.log(abs(data['Left Wrist X'] - data['Right Ankle Y']) + 1)
    
# Last 4 features with angle calculations
data['New_Feature_21'] = np.arctan2(data['Left Knee Y'] - data['Left Ankle Y'], data['Left Knee X'] - data['Left Ankle X'])
data['New_Feature_22'] = np.arctan2(data['Right Knee Y'] - data['Right Ankle Y'], data['Right Knee X'] - data['Right Ankle X'])
data['New_Feature_23'] = np.arctan2(data['Left Shoulder Y'] - data['Left Wrist Y'], data['Left Shoulder X'] - data['Left Wrist X'])
data['New_Feature_24'] = np.arctan2(data['Right Shoulder Y'] - data['Right Wrist Y'], data['Right Shoulder X'] - data['Right Wrist X'])


# Select the new feature columns
X = data[['New_Feature_1', 'New_Feature_2', 'New_Feature_3', 'New_Feature_4',
          'New_Feature_5', 'New_Feature_6', 'New_Feature_7', 'New_Feature_8',
          'New_Feature_9', 'New_Feature_10', 'New_Feature_11', 'New_Feature_12',
          'New_Feature_13', 'New_Feature_14', 'New_Feature_15', 'New_Feature_16',
          'New_Feature_17', 'New_Feature_18', 'New_Feature_19', 'New_Feature_20',
          'New_Feature_21', 'New_Feature_22', 'New_Feature_23', 'New_Feature_24']].values

# Scale the features using the same scaler as during training
X_scaled = scaler.transform(X)

# Make predictions
for sample in X_scaled:
    sample = np.expand_dims(sample, axis=0).astype(np.float32)
    interpreter.set_tensor(input_details[0]['index'], sample)
    interpreter.invoke()
    output_data = interpreter.get_tensor(output_details[0]['index'])
    predicted_activity = np.argmax(output_data[0]) + 1
    print(f'Predicted activity: {predicted_activity}')
